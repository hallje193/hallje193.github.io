{"version":3,"sources":["theme.js","Components/AppBar.js","Components/Toolbar.js","Components/Drawer.js","Components/AppAppBar.js","Components/Title.js","App.js","withRoot.js","serviceWorker.js","index.js"],"names":["rawTheme","createMuiTheme","palette","primary","light","main","dark","secondary","warning","error","xLight","red","success","green","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontFamilySecondary","fontHeader","color","text","fontWeight","textTransform","theme","background","default","common","white","placeholder","grey","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","body1","body2","withStyles","root","props","elevation","position","styles","height","breakpoints","up","Toolbar","useStyles","makeStyles","list","width","fullList","TemporaryDrawer","anchor","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","open","event","type","key","IconButton","aria-label","onClick","edge","className","Drawer","onClose","clsx","role","onKeyDown","List","map","index","ListItem","button","ListItemIcon","ListItemText","Divider","title","toolbarStyles","toolbar","justifyContent","flex","leftLinkActive","display","rightLink","marginLeft","spacing","linkSecondary","Button","underline","window","scroll","behavior","paper","backgroundColor","heading","paddingTop","Paper","Delay","ms","Typography","variant","align","withRoot","Component","ThemeProvider","CssBaseline","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.258f5af2.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport { green, grey, red } from '@material-ui/core/colors';\n\nconst rawTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#69696a',\n      main: '#28282a',\n      dark: '#1e1e1f',\n    },\n    secondary: {\n      light: '#fff5f8',\n      main: '#ff3366',\n      dark: '#e62958',\n    },\n    warning: {\n      main: '#ffc071',\n      dark: '#ffb25e',\n    },\n    error: {\n      xLight: red[50],\n      main: red[500],\n      dark: red[700],\n    },\n    success: {\n      xLight: green[50],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 14,\n    fontWeightLight: 300, // Work Sans\n    fontWeightRegular: 400, // Work Sans\n    fontWeightMedium: 700, // Roboto Condensed\n    fontFamilySecondary: \"'Roboto Condensed', sans-serif\",\n  },\n});\n\nconst fontHeader = {\n  color: rawTheme.palette.text.primary,\n  fontWeight: rawTheme.typography.fontWeightMedium,\n  fontFamily: rawTheme.typography.fontFamilySecondary,\n  textTransform: 'uppercase',\n};\n\nconst theme = {\n  ...rawTheme,\n  palette: {\n    ...rawTheme.palette,\n    background: {\n      ...rawTheme.palette.background,\n      default: rawTheme.palette.common.white,\n      placeholder: grey[200],\n    },\n  },\n  typography: {\n    ...rawTheme.typography,\n    fontHeader,\n    h1: {\n      ...rawTheme.typography.h1,\n      ...fontHeader,\n      letterSpacing: 0,\n      fontSize: 60,\n    },\n    h2: {\n      ...rawTheme.typography.h2,\n      ...fontHeader,\n      fontSize: 48,\n    },\n    h3: {\n      ...rawTheme.typography.h3,\n      ...fontHeader,\n      fontSize: 42,\n    },\n    h4: {\n      ...rawTheme.typography.h4,\n      ...fontHeader,\n      fontSize: 36,\n    },\n    h5: {\n      ...rawTheme.typography.h5,\n      fontSize: 20,\n      fontWeight: rawTheme.typography.fontWeightLight,\n    },\n    h6: {\n      ...rawTheme.typography.h6,\n      ...fontHeader,\n      fontSize: 18,\n    },\n    subtitle1: {\n      ...rawTheme.typography.subtitle1,\n      fontSize: 18,\n    },\n    body1: {\n      ...rawTheme.typography.body2,\n      fontWeight: rawTheme.typography.fontWeightRegular,\n      fontSize: 16,\n    },\n    body2: {\n      ...rawTheme.typography.body1,\n      fontSize: 14,\n    },\n  },\n};\n\nexport default theme;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiAppBar from '@material-ui/core/AppBar';\n\nconst styles = (theme) => ({\n  root: {\n    color: theme.palette.common.white,\n  },\n});\n\nfunction AppBar(props) {\n  return <MuiAppBar elevation={0} position=\"static\" {...props} />;\n}\n\nAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AppBar);","import { withStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nexport const styles = (theme) => ({\n  root: {\n    height: 64,\n    [theme.breakpoints.up('sm')]: {\n      height: 70,\n    },\n  },\n});\n\nexport default withStyles(styles)(Toolbar);","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { IconButton } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n});\n\nexport default function TemporaryDrawer() {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const list = (anchor) => (\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n            <Divider />\n            <List>\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={toggleDrawer(\"left\", true)}\n                edge=\"start\"\n                className={null}\n            >\n                <MenuIcon />\n            </IconButton>\n            <Drawer anchor={\"left\"} open={state[\"left\"]} onClose={toggleDrawer(\"left\", false)}>\n                {list(\"left\")}\n            </Drawer>\n        </>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from './AppBar';\nimport Toolbar, { styles as toolbarStyles } from './Toolbar';\nimport { Button } from '@material-ui/core';\nimport Drawer from \"./Drawer\"\n\nconst styles = (theme) => ({\n  title: {\n    fontSize: 24,\n  },\n  placeholder: toolbarStyles(theme).root,\n  toolbar: {\n    justifyContent: 'space-between',\n  },\n  left: {\n    flex: 1,\n  },\n  leftLinkActive: {\n    color: theme.palette.common.white,\n  },\n  right: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  rightLink: {\n    fontSize: 16,\n    color: theme.palette.common.white,\n    marginLeft: theme.spacing(3),\n  },\n  linkSecondary: {\n    color: theme.palette.secondary.main,\n  },\n});\n\nfunction AppAppBar(props) {\n  const { classes } = props;\n\n  return (\n    <div>\n      <AppBar position=\"fixed\">\n        <Toolbar className={classes.toolbar}>\n          <div className={classes.left} >\n            <Drawer />\n          </div>\n          <Button\n            underline=\"none\"\n            color=\"inherit\"\n            className={classes.title}\n            onClick={() => {window.scroll({top: 0, behavior: 'smooth' })}}\n          >\n            {'JERRY HALL'}\n          </Button>\n          <div className={classes.right} />\n        </Toolbar>\n      </AppBar>\n      <div className={classes.placeholder} />\n    </div>\n  );\n}\n\nAppAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AppAppBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from './AppBar';\nimport Toolbar, { styles as toolbarStyles } from './Toolbar';\nimport { Button, Typography, Paper } from '@material-ui/core';\nimport Drawer from \"./Drawer\"\nimport Typist from 'react-typist';\n\nconst styles = (theme) => ({\n    paper: {\n        height: \"50em\",\n        backgroundColor: \"#fffbeb\",\n    },\n    heading: {\n        paddingTop: \"5em\",\n    },\n});\n\nfunction Title(props) {\n    const { classes } = props;\n\n    return (\n        <div>\n            <Paper\n                className={classes.paper}\n                elevation={0}\n            >\n                <Typist >\n                    <Typist.Delay ms={500} />\n                    <Typography\n                        variant=\"h3\"\n                        align=\"center\"\n                        className={classes.heading}\n                    >\n                        Hello World!\n                    </Typography>\n                    <Typist.Delay ms={500} />\n                    <Typography\n                        variant=\"h5\"\n                        align=\"center\"\n                        className={classes.heading}\n                    >\n                        I'm Jerry. Welcome to my site.\n                    </Typography>\n                </Typist>\n            </Paper>\n        </div>\n    );\n}\n\nTitle.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Title);\n","// Create theme:\nimport withRoot from './withRoot';\n\nimport React from 'react';\nimport './App.css';\nimport AppBar from './Components/AppAppBar'\nimport Title from './Components/Title'\n\nfunction App() {\n  return (\n    <>\n      <AppBar />\n      <Title />\n    </>\n  );\n}\n\nexport default withRoot(App);\n","import React from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from './theme';\n\nexport default function withRoot(Component) {\n  function WithRoot(props) {\n    return (\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n      </ThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}